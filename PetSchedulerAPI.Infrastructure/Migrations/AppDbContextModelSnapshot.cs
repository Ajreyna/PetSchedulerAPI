// <auto-generated />
using System;
using PetSchedulerAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PetSchedulerAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("PetSchedulerAPI.Core.Models.JobDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("JobTypeId");

                    b.Property<DateTime>("Date");

                    b.Property<double>("Distance");

                    b.Property<double>("Duration");

                    b.Property<string>("Notes");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("JobDetails2");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JobTypeId = 1,
                            Date = new DateTime(2019, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Distance = 3.0,
                            Duration = 30.0,
                            Notes = "Hot!!!!",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("PetSchedulerAPI.Core.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("RecordType");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Running",
                            RecordType = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Weights",
                            RecordType = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Walking",
                            RecordType = 1
                        });
                });

            modelBuilder.Entity("PetSchedulerAPI.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Test User"
                        });
                });

            modelBuilder.Entity("PetSchedulerAPI.Core.Models.JobDetails", b =>
                {
                    b.HasOne("PetSchedulerAPI.Core.Models.JobType", "JobType")
                        .WithMany()
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetSchedulerAPI.Core.Models.User", "User")
                        .WithMany("JobDetails2")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
